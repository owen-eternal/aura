const bcrypt = require('bcrypt');
const JWT = require('jsonwebtoken')
const auth = require('express').Router();
const pool = require('../db')

// Route for handling registration.
auth.post('/register', async (request, response) => {
   
    // retrieve data from request body
    const { username, email, password, user_role } = request.body

    try{

        // Hash password.
        const passwordHash = await bcrypt.hash(password, 10);

        // define the sql query.
        const query = {
            text : 'INSERT INTO service_user (username, email, passwrd, user_role) VALUES ($1, $2, $3, $4) RETURNING id, username',
            values : [username, email, passwordHash, user_role]
        }

        // save the data and return only id and username.
        const user = await pool.query(query);

        // sign the id and username and return a access token.
        const token = await JWT.sign(user.rows.pop(), process.env.SECRET_KEY);

        return response.status(200).json({access_token: token});
    
    // catch any errors generated by bcrypt
    // or the database instance or the jwt 
    }catch(error){ console.error(error)}

})

module.exports = auth
